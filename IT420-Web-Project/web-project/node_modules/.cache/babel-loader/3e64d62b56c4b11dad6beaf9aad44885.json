{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\demal\\\\IT420-Web-Project\\\\web-project\\\\src\\\\components\\\\TeamSlide.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { FaArrowAltCircleRight, FaArrowAltCircleLeft } from 'react-icons/fa';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TeamSlide = _ref => {\n  _s();\n\n  let {\n    teamSlideData,\n    teamSlideText\n  } = _ref;\n  const [currentImg, setImg] = useState(0);\n  const [currentText, setText] = useState(0);\n  const length = teamSlideData.length;\n  const lengthText = teamSlideText.length; // compares value of the current slide and adjusts the slide accordingly \n\n  const nextSlide = () => {\n    setImg(currentImg === length - 1 ? 0 : currentImg + 1);\n    setText(currentText === lengthText - 1 ? 0 : currentText + 1);\n  };\n\n  const previousSlide = () => {\n    setImg(currentImg === 0 ? length - 1 : currentImg - 1);\n    setText(currentText === 0 ? lengthText - 1 : currentText - 1);\n  };\n\n  if (!Array.isArray(teamSlideData) || teamSlideData.length <= 0) {\n    return null;\n  }\n\n  if (!Array.isArray(teamSlideText) || teamSlideText.length <= 0) {\n    return null;\n  } //gonna be real here, I am genuinely suprised this even worked. c:\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"team-container\",\n    children: [/*#__PURE__*/_jsxDEV(FaArrowAltCircleLeft, {\n      className: \"right-arrow\",\n      onClick: previousSlide\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"team-image\",\n      children: teamSlideData.map((slide, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: index === currentImg ? 'slide active' : 'slide',\n          children: index === currentImg && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: slide.image,\n            alt: \"\",\n            className: \"slide-image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 59\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 29\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"team-content\",\n      children: teamSlideText.map((text, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: index === currentText ? 'slide active' : 'slide',\n          children: index === currentText && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"slide-text\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\" \", text.textHeader, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 37\n            }, this), text.textContent]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 33\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FaArrowAltCircleRight, {\n      className: \"right-arrow\",\n      onClick: nextSlide\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TeamSlide, \"cd1sWuoOC/SKXubqviV3yBiMB4E=\");\n\n_c = TeamSlide;\nexport default TeamSlide;\n\nvar _c;\n\n$RefreshReg$(_c, \"TeamSlide\");","map":{"version":3,"sources":["C:/Users/demal/IT420-Web-Project/web-project/src/components/TeamSlide.js"],"names":["useState","FaArrowAltCircleRight","FaArrowAltCircleLeft","TeamSlide","teamSlideData","teamSlideText","currentImg","setImg","currentText","setText","length","lengthText","nextSlide","previousSlide","Array","isArray","map","slide","index","image","text","textHeader","textContent"],"mappings":"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","sourcesContent":["import {  useState } from \"react\"\r\nimport { FaArrowAltCircleRight, FaArrowAltCircleLeft } from 'react-icons/fa'\r\n\r\nconst TeamSlide = ( { teamSlideData, teamSlideText } ) => {\r\n\r\n    const [currentImg, setImg] = useState(0);\r\n    const [currentText, setText] = useState(0);\r\n\r\n    const length = teamSlideData.length;\r\n    const lengthText = teamSlideText.length;\r\n\r\n    // compares value of the current slide and adjusts the slide accordingly \r\n    const nextSlide = () => {\r\n        setImg(currentImg === length - 1 ? 0 : currentImg + 1)\r\n        setText(currentText === lengthText - 1 ? 0 : currentText + 1)\r\n    }\r\n\r\n    const previousSlide = () => {\r\n        setImg(currentImg === 0 ? length - 1: currentImg - 1)\r\n        setText(currentText === 0 ? lengthText - 1 : currentText - 1)\r\n    }\r\n\r\n\r\n    if ( !Array.isArray(teamSlideData) || teamSlideData.length <= 0 ) {\r\n        return null;\r\n    }\r\n\r\n    if ( !Array.isArray(teamSlideText)  || teamSlideText.length <= 0) {\r\n        return null;\r\n    }\r\n\r\n    //gonna be real here, I am genuinely suprised this even worked. c:\r\n\r\n    return (\r\n        <div className=\"team-container\">\r\n\r\n            {/* styling for all the arrows is located in the autoslide.css file */}\r\n\r\n            <FaArrowAltCircleLeft  className=\"right-arrow\" onClick={previousSlide} />\r\n\r\n            <div className=\"team-image\">\r\n\r\n                {teamSlideData.map((slide, index) => {\r\n\r\n                    return (\r\n                            <div className={index === currentImg ? 'slide active' : 'slide'} key = {index} >\r\n\r\n                                {index === currentImg && (<img src={slide.image} alt='' className=\"slide-image\"/>)}\r\n\r\n                            </div>\r\n                    )\r\n\r\n                })}\r\n\r\n            </div>\r\n\r\n            <div className=\"team-content\">\r\n\r\n                {teamSlideText.map((text, index) => {\r\n\r\n                    return (\r\n                        <div className={index === currentText ? 'slide active' : 'slide'} key = {index} >\r\n\r\n                            {index === currentText && (\r\n                                <div className=\"slide-text\">\r\n                                    <h3> {text.textHeader} </h3>\r\n                                    {text.textContent}\r\n                                </div>\r\n                            )}\r\n\r\n                        </div>\r\n                    )\r\n\r\n                })}\r\n\r\n            </div>\r\n\r\n            <FaArrowAltCircleRight  className=\"right-arrow\" onClick={nextSlide} />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TeamSlide"]},"metadata":{},"sourceType":"module"}