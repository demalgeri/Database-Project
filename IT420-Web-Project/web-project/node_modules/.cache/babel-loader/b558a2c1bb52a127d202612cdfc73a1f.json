{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\demal\\\\IT420-Web-Project\\\\web-project\\\\src\\\\components\\\\AutoSlide.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\n/* NOTES:\r\n\r\n    changed slide data from being an inline constant defined here to being its own component,\r\n    addressing any information from slideData should be done through the destructured compenent passed\r\n    through AutoSlide. c:\r\n\r\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AutoSlide = _ref => {\n  _s();\n\n  let {\n    slideData\n  } = _ref;\n  const [current, setImg] = useState(0);\n  const length = slideData.length;\n\n  const nextSlide = () => {\n    setImg(current === length - 1 ? 0 : current + 1);\n  };\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      nextSlide();\n    }, 5000);\n    return () => clearInterval(interval);\n  }); // if there is no data loaded in the array return null. \n\n  if (!Array.isArray(slideData) || slideData.length <= 0) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"header-slide\",\n    children: slideData.map((slide, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: index === current ? 'slide active' : 'slide',\n        children: index === current && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: slide.image,\n          alt: \"\",\n          className: \"slide-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 48\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AutoSlide, \"1jRV2FRyZDW32gnK+xwxRGs9jsI=\");\n\n_c = AutoSlide;\nexport default AutoSlide;\n\nvar _c;\n\n$RefreshReg$(_c, \"AutoSlide\");","map":{"version":3,"sources":["C:/Users/demal/IT420-Web-Project/web-project/src/components/AutoSlide.js"],"names":["useState","useEffect","AutoSlide","slideData","current","setImg","length","nextSlide","interval","setInterval","clearInterval","Array","isArray","map","slide","index","image"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAEA,MAAMC,SAAS,GAAG,QAAqB;AAAA;;AAAA,MAAnB;AAAEC,IAAAA;AAAF,GAAmB;AAEnC,QAAM,CAACC,OAAD,EAAUC,MAAV,IAAoBL,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAMM,MAAM,GAAGH,SAAS,CAACG,MAAzB;;AAEA,QAAMC,SAAS,GAAG,MAAM;AACpBF,IAAAA,MAAM,CAACD,OAAO,KAAKE,MAAM,GAAG,CAArB,GAAyB,CAAzB,GAA6BF,OAAO,GAAG,CAAxC,CAAN;AACH,GAFD;;AAKAH,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMO,QAAQ,GAAGC,WAAW,CAAC,MAAM;AAE/BF,MAAAA,SAAS;AAEZ,KAJ2B,EAIzB,IAJyB,CAA5B;AAMA,WAAO,MAAMG,aAAa,CAACF,QAAD,CAA1B;AAEH,GATQ,CAAT,CAVmC,CAqBnC;;AACA,MAAK,CAACG,KAAK,CAACC,OAAN,CAAcT,SAAd,CAAD,IAA6BA,SAAS,CAACG,MAAV,IAAoB,CAAtD,EAA0D;AACtD,WAAO,IAAP;AACH;;AAED,sBACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,cAGKH,SAAS,CAACU,GAAV,CAAc,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAE7B,0BACI;AAAK,QAAA,SAAS,EAAEA,KAAK,KAAKX,OAAV,GAAoB,cAApB,GAAqC,OAArD;AAAA,kBAEKW,KAAK,KAAKX,OAAV,iBAAsB;AAAK,UAAA,GAAG,EAAEU,KAAK,CAACE,KAAhB;AAAuB,UAAA,GAAG,EAAC,EAA3B;AAA8B,UAAA,SAAS,EAAC;AAAxC;AAAA;AAAA;AAAA;AAAA;AAF3B,SAAqED,KAArE;AAAA;AAAA;AAAA;AAAA,cADJ;AAQH,KAVA;AAHL;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBH,CA9CD;;GAAMb,S;;KAAAA,S;AA+CN,eAAeA,SAAf","sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\n/* NOTES:\r\n\r\n    changed slide data from being an inline constant defined here to being its own component,\r\n    addressing any information from slideData should be done through the destructured compenent passed\r\n    through AutoSlide. c:\r\n\r\n*/\r\n\r\nconst AutoSlide = ( { slideData } ) => {\r\n\r\n    const [current, setImg] = useState(0);\r\n    const length = slideData.length;\r\n\r\n    const nextSlide = () => {\r\n        setImg(current === length - 1 ? 0 : current + 1)\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n\r\n            nextSlide() \r\n\r\n        }, 5000);\r\n\r\n        return () => clearInterval(interval);\r\n\r\n    });\r\n\r\n    // if there is no data loaded in the array return null. \r\n    if ( !Array.isArray(slideData) || slideData.length <= 0 ) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <div className=\"header-slide\">\r\n            \r\n\r\n            {slideData.map((slide, index) => {\r\n\r\n                return (\r\n                    <div className={index === current ? 'slide active' : 'slide'} key = {index} >\r\n\r\n                        {index === current && (<img src={slide.image} alt='' className=\"slide-image\"/>)}\r\n                \r\n                    </div>\r\n                )\r\n\r\n            })}\r\n\r\n            {/* <FaArrowAltCircleRight  className=\"right-arrow\" onClick={nextSlide} /> */}\r\n            \r\n        </div>\r\n    )\r\n}\r\nexport default AutoSlide"]},"metadata":{},"sourceType":"module"}